/**

@page irq_pic_page PIC y Manejo de Solicitudes de Interrupción

Esta página explica los conceptos básicos relacionados con el manejo de 
solicitudes de interrupción de dispositivos de Entrada y Salida (E/S).

@section pic_section  PIC - Programmable Interrupt Controller

Cuando un dispositivo de Entrada / Salida requiere atención, lanza una 
Solicitud de Interrupción (Interrupt Request - IRQ). Estas IRQ son recibidas por
un dispositivo llamado el PIC PIC (Programmable Interrupt Controller). El 
trabajo del PIC consiste en recibir y priorizar las IRQ recibidas, y enviar una
señal de interrupción a la CPU. 

En la arquitectura IA-32 el sistema cuenta con dos controladores PIC, uno 
llamado "Maestro" y otro "Esclavo", que se encuentra conectado en cascada al 
PIC Maestro. Cada PIC puede atender 8 líneas de IRQ, por lo tanto se pueden
atender hasta 16 solicitudes.

Al arranque del sistema, las líneas de interrupción IRQ0 a IRQ 5 se encuentran 
mapeadas a las interrupciones numero 0x8 a 0xF. Las líneas de interrupción
IRQ8 a IRQ 15 se encuentran mapeadas a las interrupciones 0x70 a 0x77.

@par Lista de Solicitudes de Interrupción

La lista de IRQ es la siguiente:

@verbatim

                Número de 
    IRQ        Interrupción   Descripción
    ----      -------------   ---------------------------------------
    IRQ0         0x08         Timer 
    IRQ1         0x09         Teclado 
    IRQ2         0x0A         Cascade para el PIC esclavo 
    IRQ3         0x0B         Puerto serial 2 
    IRQ4         0x0C         Puerto serial 1
    IRQ5         0x0D         AT: Puerto paralelo2  PS/2 : reservado 
    IRQ6         0x0E         Diskette 
    IRQ7         0x0F         Puerto paralelo 1 
    IRQ8/IRQ0    0x70         Reloj de tiempo real del CMOS 
    IRQ9/IRQ1    0x71         Refresco vertical de CGA 
    IRQ10/IRQ2   0x72         Reservado 
    IRQ11/IRQ3   0x73         Reservado 
    IRQ12/IRQ4   0x74         AT: reservado. PS/2: disp. auxiliar 
    IRQ13/IRQ5   0x75         FPU (Unidad de Punto Flotante) 
    IRQ14/IRQ6   0x76         Controlador de disco duro 
    IRQ15/IRQ7   0x77         Reservado
  
@endverbatim  

Al observar la tabla anterior, se hace evidente que existe un problema:
las interrupciones 0x8 a 0x0F también son utilizadas para las excepciones de la 
arquitectura IA-32, ya que éstas siempre ocupan las interrupciones 0-31.

Por esta razón, es necesario reprogramar el PIC para que las interrupciones de 
entrada/salida se mapeen después de las excepciones de IA-32, es decir desde la 
interrupción numero 32 en adelante. A la IRQ 0 (Timer) le corresponderá
la interrupción número 32, y asi sucesivamente.

@section pic_8259a Características del PIC

Este microcontrolador maneja las interrupciones en la arquitectura IA-32, y 
posee los siguientes puertos de entrada/salida:

@verbatim

Puerto  Descripción
-----   -----------------------------------------
0x20    Registro de comandos y estado del PIC maestro
0x21    Registro de máscara de IRQ y datos del PIC maestro
0xA0    Registro de comandos y datos del PIC esclavo
0xA1    Registro de máscara de IRQ y datos del PIC esclavo

@endverbatim


@section pic_setup Configuración del PIC

La configuración del PIC se realiza por medio de Palabras de Control de 
Inicialización (Initialization Control Words - ICW).

@par Initialization Control Word 1 (ICW1).

Esta es la palabra primaria para inicializar el PIC, y su valor debe ser escrito 
en el registro de comandos del PIC. El formato de la ICW1 es el siguiente:

@verbatim

Bit  Descripción
---  -------------------------------------------------------
0    1 = El PIC debe esperar a ICW 4 durante la inicializacion
1    1 = Sólo hay un PIC en el sistema. 0 = El PIC se encuentra conectado en
     cascada con otros PIC, y se debe enviar ICW3 al controlador.
2    1 = El intervalo de la dirección CALL es 4, 0 = el intervalo es 8.
	 Este bit es ignorado en x86 y su valor por defecto es 0.
3    1 = Operar en modo disparado por nivel. 0 = Operar en modo disparado por
     borde.
4    Bit de inicializacion. 1 = El PIC debe ser inicializado
5    Dirección del vector de interrupcion (solo para MCS-80/85), en IA-32 = 0
6    Dirección del vector de interrupcion (solo para MCS-80/85), en IA-32 = 0
7    Dirección del vector de interrupcion (solo para MCS-80/85), en IA-32 = 0

@endverbatim 

Para inicializar el PIC se requiere que los bits 0 y 4 sean en 1 y los demás 
tengan valor 0. Esto significa que el valor de ICW1 es 0x11. 
ICW1 debe ser escrita en el registro de comandos del PIC maestro 
(dirección de e/s 0x20).

Se debe recordar que el PIC se encuentra en cascada con otro (PIC esclavo), por
lo tanto tambien se debe escribir ICW1 en el registro de comandos del PIC
esclavo (dirección de e/s 0xA0).

@par Initialization Control Word 2 (ICW2)

Esta palabra permite definir la dirección base (inicial) del vector de 
interrupción (el número) que el PIC va a utilizar.
El formato de ICW2 es el siguiente:

@verbatim

Bit    Descripción
---    -------------------------
0-2    Bits 8-10 de la dirección en la IDT en modo MCS-80/85
3-7    Bits de la dirección en la IDT en modo MCS-80/85. En x86 especifica la
	   dirección del número de interrupción base.
	   
@endverbatim

Debido a que las primeras 32 entradas están reservadas para las excepciones en 
la arquitectura IA-32, ICW2 debe contener un valor mayor o igual a 32 (0x20).

Al utilizar los PIC en cascada, se debe enviar ICW2 a los dos controladores
en su registro de datos (0x21 y 0xA1 para maestro y esclavo respectivamente), 
indicando la dirección en la IDT que va a ser utilizada por cada uno de ellos.

Las primeras 8 IRQ van a ser manejadas por el PIC maestro y se mapearán en la 
interrupción 32 (0x20) en adelante. Las siguientes 8 interrupciones las manejará
el PIC esclavo, y se mapearán a la interrupción 40 (0x28) en adelante.

@par Initialization Control Word 3 (ICW3)

Esta palabra permite definir las lineas de IRQ que van a ser compartidas por los
PIC maestro y esclavo. Al igual que ICW2, ICW3 también se escribe en los
registros de datos de los PIC (0x21 y 0xA1 para el PIC maestro y esclavo, 
respectivamente).

Para el PIC maestro, ICW3 tiene el siguiente formato:

@verbatim
Bits    Descripción
----    -------------------------------------------------------------
0-7     Determina la línea de IRQ que está conectada al PIC esclavo

@endverbatim

El bit 0 representa la línea de IRQ 0, el bit 1 representa la línea de IRQ 1,
el bit 2 representa la línea de IRQ 2, y así sucesivamente. 

Dado que en la arquitectura IA-32 el PIC maestro se conecta con el PIC esclavo
por medio de la linea IRQ 2, el valor de ICW3 debe ser 00000100 (0x04), que 
define el bit 3 (correspondiente a la linea IRQ2) en 1. 


Para el PIC esclavo, ICW3 tiene el siguiente formato:
@verbatim

Bits     Descripción
---      -------------------------
0-2      Número de IRQ que el maestro utiliza para conectarse (en notación
         binaria)
3-7      Reservado, debe ser 0

@endverbatim

El número de la linea se debe representar en notación binaria. Por lo tanto, 
000 corresponde a la línea de IRQ 0, 001 corresponde a la línea de IRQ 1, 010
corresponde a la línea de IRQ 2, y asi sucesivamente. Debido a que se va a 
utilizar la línea de IRQ 2, el valor de ICW3 para el PIC esclavo debe ser 
0x00000010, (0x02).

@par Inicialization Control Word (ICW4)

Esta palabra controla el funcionamiento general del PIC. Su formato es el 
siguiente:

@verbatim

Bit   Descripción
---   -----------------------------------
0     1 = modo x86 0 = modo MCS-80/86
1     1 = En el ultimo pulso de recepcion de interrupción, el controlador
      realiza una operacion End Of Interrupt (EOI)
2     Sólo se debe usar si el bit 3 es 1. Si este bit es 1, selecciona el 
      buffer maestro.
3     1= operar en modo de bufer
4     Special Fully Nested Mode. Usado en sistema con una gran cantidad de
      controladores.
5-7   Reservado, debe ser 0.

@endverbatim

De esta forma, solo es necesario establecer el bit 0 en ICW4 y escribir ICW4 en
los registros de datos del PIC maestro y esclavo (0x21 y 0xA1).


@section pic_ocw Palabras de Control de Operación (Operation Control Word)

Antes de retornar de la rutina de servicio de interrupción, se debe enviar al 
PIC maestro (y esclavo  si se establece operacion en cascada) una instrucción 
EOI (End of Interrupt). Existen dos tipos de EOI: Específica y no especifica.

Al terminar la rutina de servicio de interrupción, se debe envar OCW2 a los
registros de comando del PIC maestro y esclavo (0x20 y 0xA0).

El formato de OCW2 es el siguiente:

@verbatim
 
Bit         Descripción
-------     -----------------------
0, 1, 2     Nivel de interrupciones en el cual debe reaccionar
            el controlador (siempre 0)
3, 4        Siempre 0		
5           Solicitud de fin de interrupción. Debe ser 1
6           Seleccion. Debe ser 0.
8           Rotación. Debe ser 0.

@endverbatim

De esta forma, el único bit activo de OCW2 es el bit 5, = 00100000 = 0x20.
Este es el valor a enviar a los registros de comando del PIC maestro y esclavo 
(0x20 y 0xA0 respectivamente).

@section pic_programming Re-Programación del PIC

El proceso de re-programar el PIC se realiza mediante el siguiente código:
-# Enviar Initialization Command Word 1 - ICW1 al PIC
	El valor de ICW1 es 0x11. Debe ser escrita en el  registro de comandos del
	PIC maestro (dirección de e/s 0x20). Si existe un PIC esclavo, ICW1 se debe
	enviar también su registro de comandos del PIC esclavo (0xA0)
	@verbatim
	outb(MASTER_PIC_COMMAND_PORT, 0x11);
	outb(SLAVE_PIC_COMMAND_PORT, 0x11);
	@endverbatim
-# Enviar Initialization Command Word 2 - ICW2 al PIC
    ICW2 debe contener un valor mayor o	igual a 32 (0x20). Las primeras 8 IRQ 
    van a ser manejadas por el PIC maestro y se mapearán
	a partir del numero IDT_IRQ_OFFSET (32). Las siguientes 8 interrupciones 
	las manejará el PIC esclavo, y se mapearán a partir de la interrupcion 40 
	(0x28).
	@verbatim
	outb(MASTER_PIC_DATA_PORT, IDT_IRQ_OFFSET);
	outb(SLAVE_PIC_DATA_PORT, IDT_IRQ_OFFSET + 8);
    @endverbatim
-# Enviar Initialization Control Word 3 - ICW3 al PIC
	Dado que en la arquitectura Intel el PIC maestro se conecta con el PIC
	esclavo por medio de la linea IRQ 2, el valor de ICW3 debe ser 00000100
	(0x04).
	Para el PIC esclavo el valor de ICW3 debe ser 00000010 (0x02).
    @verbatim
	outb(MASTER_PIC_DATA_PORT, 0x04);
	outb(SLAVE_PIC_DATA_PORT, 0x02);
	@endverbatim
-# Enviar Initialization Control Word 4 - ICW4 al PIC.
	El valor de ICW4 debe ser entonces 00000001, es decir, 0x01.
	@verbatim
	outb(MASTER_PIC_DATA_PORT, 0x01);
	outb(SLAVE_PIC_DATA_PORT, 0x01);
	@endverbatim

*/